# Tomcat Server http port 설정 (기본값은 8080)
server.port=8080

# 스프링 부트 애플리케이션 이름 설정
spring.application.name=lightbooks

# DataSource 관련 설정
# Oracle JDBC 드라이버 클래스 이름 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB 접속 URL, 계정 설정
spring.datasource.url=jdbc:mysql://34.169.208.91:3306/NOVELDB?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
spring.datasource.username=ezhae
spring.datasource.password=123

# JAP/Hibernate DDL(create, alter, drop, truncate)
# create table, drop table을 실행하지 않음
spring.jpa.hibernate.ddl-auto=none

# JPA/Hibernate에서 생성된 SQL을 로그에서 예쁘게 출력.
spring.jpa.properties.hibernate.format_sql=true

# JAP/Hibernate에서 SQL을 로그 출력할 때 syntax coloring을 제공
spring.jpa.properties.hibernate.highlght_sql=true

# Hibernate의 네이밍 전략을 기본값에서 변경하여
# 엔티티 클래스에서 지정한 테이블명(@Table(name = "Post"))을 그대로 사용하도록 설정
# (기본값은 소문자로 변환되므로, 대소문자를 유지하려면 이 설정이 필요함)
# 단 이걸 쓰면 postId(자바필드)를 post_id(db컬럼)로 자동 변환해주지 않기 때문에 @Column(name="post_id") 해야함
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Log4j2 로그 레벨 설정
# trace < info < warn < error
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.web.resources.static-locations=classpath:/static/

# 최대 동시 요청 처리 스레드 (기본값 200 → 20으로 축소)
#server.tomcat.threads.max=20
# 최소 스레드 개수 (기본값 10 → 5로 줄이기)
#server.tomcat.threads.min-spare=5
# 최대 대기 요청 큐 크기 (기본값 100 → 10으로 축소)
#server.tomcat.accept-count=10
# Keep-Alive 유지 시간 (3초, 기본값 무제한)
#server.tomcat.keep-alive-timeout=3000